// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SSA-Protocol.proto
package com.linlong.f10.core.communication;

public final class SSAProtocol {
  private SSAProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code protocol.ProtocolType}
   */
  public enum ProtocolType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TOKEN_REQUEST_PROTOCOL = 1;</code>
     */
    TOKEN_REQUEST_PROTOCOL(0, 1),
    /**
     * <code>TOKEN_RESPONSE_PROTOCOL = 2;</code>
     */
    TOKEN_RESPONSE_PROTOCOL(1, 2),
    /**
     * <code>HEART_BEAT_PROTOCOL = 3;</code>
     */
    HEART_BEAT_PROTOCOL(2, 3),
    /**
     * <code>SERVER_STATUS_PROTOCOL = 4;</code>
     */
    SERVER_STATUS_PROTOCOL(3, 4),
    ;

    /**
     * <code>TOKEN_REQUEST_PROTOCOL = 1;</code>
     */
    public static final int TOKEN_REQUEST_PROTOCOL_VALUE = 1;
    /**
     * <code>TOKEN_RESPONSE_PROTOCOL = 2;</code>
     */
    public static final int TOKEN_RESPONSE_PROTOCOL_VALUE = 2;
    /**
     * <code>HEART_BEAT_PROTOCOL = 3;</code>
     */
    public static final int HEART_BEAT_PROTOCOL_VALUE = 3;
    /**
     * <code>SERVER_STATUS_PROTOCOL = 4;</code>
     */
    public static final int SERVER_STATUS_PROTOCOL_VALUE = 4;


    public final int getNumber() { return value; }

    public static ProtocolType valueOf(int value) {
      switch (value) {
        case 1: return TOKEN_REQUEST_PROTOCOL;
        case 2: return TOKEN_RESPONSE_PROTOCOL;
        case 3: return HEART_BEAT_PROTOCOL;
        case 4: return SERVER_STATUS_PROTOCOL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProtocolType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ProtocolType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProtocolType>() {
            public ProtocolType findValueByNumber(int number) {
              return ProtocolType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SSAProtocol.getDescriptor().getEnumTypes().get(0);
    }

    private static final ProtocolType[] VALUES = values();

    public static ProtocolType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ProtocolType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protocol.ProtocolType)
  }

  /**
   * Protobuf enum {@code protocol.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GET_TOKEN = 0;</code>
     */
    GET_TOKEN(0, 0),
    /**
     * <code>EXTEND_TOKEN_TIME_TO_LIVE = 1;</code>
     */
    EXTEND_TOKEN_TIME_TO_LIVE(1, 1),
    /**
     * <code>INVALID_TOKEN = 3;</code>
     */
    INVALID_TOKEN(2, 3),
    ;

    /**
     * <code>GET_TOKEN = 0;</code>
     */
    public static final int GET_TOKEN_VALUE = 0;
    /**
     * <code>EXTEND_TOKEN_TIME_TO_LIVE = 1;</code>
     */
    public static final int EXTEND_TOKEN_TIME_TO_LIVE_VALUE = 1;
    /**
     * <code>INVALID_TOKEN = 3;</code>
     */
    public static final int INVALID_TOKEN_VALUE = 3;


    public final int getNumber() { return value; }

    public static RequestType valueOf(int value) {
      switch (value) {
        case 0: return GET_TOKEN;
        case 1: return EXTEND_TOKEN_TIME_TO_LIVE;
        case 3: return INVALID_TOKEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return SSAProtocol.getDescriptor().getEnumTypes().get(1);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RequestType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:protocol.RequestType)
  }

  public interface ProtocolOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .protocol.ProtocolType protocolType = 1;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    boolean hasProtocolType();
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    SSAProtocol.ProtocolType getProtocolType();
  }
  /**
   * Protobuf type {@code protocol.Protocol}
   */
  public static final class Protocol extends
      com.google.protobuf.GeneratedMessage
      implements ProtocolOrBuilder {
    // Use Protocol.newBuilder() to construct.
    private Protocol(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Protocol(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Protocol defaultInstance;
    public static Protocol getDefaultInstance() {
      return defaultInstance;
    }

    public Protocol getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Protocol(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      //int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SSAProtocol.ProtocolType value = SSAProtocol.ProtocolType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                protocolType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SSAProtocol.internal_static_protocol_Protocol_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SSAProtocol.internal_static_protocol_Protocol_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SSAProtocol.Protocol.class, SSAProtocol.Protocol.Builder.class);
    }

    public static com.google.protobuf.Parser<Protocol> PARSER =
        new com.google.protobuf.AbstractParser<Protocol>() {
      public Protocol parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Protocol(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Protocol> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .protocol.ProtocolType protocolType = 1;
    public static final int PROTOCOLTYPE_FIELD_NUMBER = 1;
    private SSAProtocol.ProtocolType protocolType_;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public boolean hasProtocolType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public SSAProtocol.ProtocolType getProtocolType() {
      return protocolType_;
    }

    private void initFields() {
      protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProtocolType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, protocolType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, protocolType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SSAProtocol.Protocol parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.Protocol parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.Protocol parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.Protocol parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.Protocol parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.Protocol parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SSAProtocol.Protocol parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SSAProtocol.Protocol parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SSAProtocol.Protocol parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.Protocol parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SSAProtocol.Protocol prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Protocol}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SSAProtocol.ProtocolOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SSAProtocol.internal_static_protocol_Protocol_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SSAProtocol.internal_static_protocol_Protocol_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SSAProtocol.Protocol.class, SSAProtocol.Protocol.Builder.class);
      }

      // Construct using SSAProtocol.Protocol.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SSAProtocol.internal_static_protocol_Protocol_descriptor;
      }

      public SSAProtocol.Protocol getDefaultInstanceForType() {
        return SSAProtocol.Protocol.getDefaultInstance();
      }

      public SSAProtocol.Protocol build() {
        SSAProtocol.Protocol result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SSAProtocol.Protocol buildPartial() {
        SSAProtocol.Protocol result = new SSAProtocol.Protocol(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocolType_ = protocolType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SSAProtocol.Protocol) {
          return mergeFrom((SSAProtocol.Protocol)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SSAProtocol.Protocol other) {
        if (other == SSAProtocol.Protocol.getDefaultInstance()) return this;
        if (other.hasProtocolType()) {
          setProtocolType(other.getProtocolType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProtocolType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SSAProtocol.Protocol parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SSAProtocol.Protocol) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .protocol.ProtocolType protocolType = 1;
      private SSAProtocol.ProtocolType protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public boolean hasProtocolType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public SSAProtocol.ProtocolType getProtocolType() {
        return protocolType_;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder setProtocolType(SSAProtocol.ProtocolType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        protocolType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder clearProtocolType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Protocol)
    }

    static {
      defaultInstance = new Protocol(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.Protocol)
  }

  public interface UserSettingOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userName = 1;
    /**
     * <code>optional string userName = 1;</code>
     */
    boolean hasUserName();
    /**
     * <code>optional string userName = 1;</code>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string userName = 1;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();
  }
  /**
   * Protobuf type {@code protocol.UserSetting}
   *
   * <pre>
   *Todo 使用者个人资料设定(未使用此协议)
   * </pre>
   */
  public static final class UserSetting extends
      com.google.protobuf.GeneratedMessage
      implements UserSettingOrBuilder {
    // Use UserSetting.newBuilder() to construct.
    private UserSetting(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private UserSetting(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final UserSetting defaultInstance;
    public static UserSetting getDefaultInstance() {
      return defaultInstance;
    }

    public UserSetting getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private UserSetting(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      //int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SSAProtocol.internal_static_protocol_UserSetting_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SSAProtocol.internal_static_protocol_UserSetting_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SSAProtocol.UserSetting.class, SSAProtocol.UserSetting.Builder.class);
    }

    public static com.google.protobuf.Parser<UserSetting> PARSER =
        new com.google.protobuf.AbstractParser<UserSetting>() {
      public UserSetting parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UserSetting(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<UserSetting> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userName = 1;
    public static final int USERNAME_FIELD_NUMBER = 1;
    private java.lang.Object userName_;
    /**
     * <code>optional string userName = 1;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userName = 1;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      userName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SSAProtocol.UserSetting parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.UserSetting parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.UserSetting parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.UserSetting parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.UserSetting parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.UserSetting parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SSAProtocol.UserSetting parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SSAProtocol.UserSetting parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SSAProtocol.UserSetting parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.UserSetting parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SSAProtocol.UserSetting prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.UserSetting}
     *
     * <pre>
     *Todo 使用者个人资料设定(未使用此协议)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SSAProtocol.UserSettingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SSAProtocol.internal_static_protocol_UserSetting_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SSAProtocol.internal_static_protocol_UserSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SSAProtocol.UserSetting.class, SSAProtocol.UserSetting.Builder.class);
      }

      // Construct using SSAProtocol.UserSetting.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SSAProtocol.internal_static_protocol_UserSetting_descriptor;
      }

      public SSAProtocol.UserSetting getDefaultInstanceForType() {
        return SSAProtocol.UserSetting.getDefaultInstance();
      }

      public SSAProtocol.UserSetting build() {
        SSAProtocol.UserSetting result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SSAProtocol.UserSetting buildPartial() {
        SSAProtocol.UserSetting result = new SSAProtocol.UserSetting(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userName_ = userName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SSAProtocol.UserSetting) {
          return mergeFrom((SSAProtocol.UserSetting)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SSAProtocol.UserSetting other) {
        if (other == SSAProtocol.UserSetting.getDefaultInstance()) return this;
        if (other.hasUserName()) {
          bitField0_ |= 0x00000001;
          userName_ = other.userName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SSAProtocol.UserSetting parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SSAProtocol.UserSetting) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userName = 1;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string userName = 1;</code>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userName = 1;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userName = 1;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 1;</code>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 1;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.UserSetting)
    }

    static {
      defaultInstance = new UserSetting(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.UserSetting)
  }

  public interface HeartbeatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .protocol.ProtocolType protocolType = 1;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    boolean hasProtocolType();
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    SSAProtocol.ProtocolType getProtocolType();

    // required int32 heartbeat = 2 [default = 1];
    /**
     * <code>required int32 heartbeat = 2 [default = 1];</code>
     */
    boolean hasHeartbeat();
    /**
     * <code>required int32 heartbeat = 2 [default = 1];</code>
     */
    int getHeartbeat();
  }
  /**
   * Protobuf type {@code protocol.Heartbeat}
   *
   * <pre>
   *心跳请求协议设计
   * </pre>
   */
  public static final class Heartbeat extends
      com.google.protobuf.GeneratedMessage
      implements HeartbeatOrBuilder {
    // Use Heartbeat.newBuilder() to construct.
    private Heartbeat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Heartbeat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Heartbeat defaultInstance;
    public static Heartbeat getDefaultInstance() {
      return defaultInstance;
    }

    public Heartbeat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Heartbeat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      //int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SSAProtocol.ProtocolType value = SSAProtocol.ProtocolType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                protocolType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              heartbeat_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SSAProtocol.internal_static_protocol_Heartbeat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SSAProtocol.internal_static_protocol_Heartbeat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SSAProtocol.Heartbeat.class, SSAProtocol.Heartbeat.Builder.class);
    }

    public static com.google.protobuf.Parser<Heartbeat> PARSER =
        new com.google.protobuf.AbstractParser<Heartbeat>() {
      public Heartbeat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Heartbeat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Heartbeat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .protocol.ProtocolType protocolType = 1;
    public static final int PROTOCOLTYPE_FIELD_NUMBER = 1;
    private SSAProtocol.ProtocolType protocolType_;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public boolean hasProtocolType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public SSAProtocol.ProtocolType getProtocolType() {
      return protocolType_;
    }

    // required int32 heartbeat = 2 [default = 1];
    public static final int HEARTBEAT_FIELD_NUMBER = 2;
    private int heartbeat_;
    /**
     * <code>required int32 heartbeat = 2 [default = 1];</code>
     */
    public boolean hasHeartbeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 heartbeat = 2 [default = 1];</code>
     */
    public int getHeartbeat() {
      return heartbeat_;
    }

    private void initFields() {
      protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
      heartbeat_ = 1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProtocolType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHeartbeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, protocolType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, heartbeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, protocolType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, heartbeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SSAProtocol.Heartbeat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.Heartbeat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.Heartbeat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.Heartbeat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.Heartbeat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.Heartbeat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SSAProtocol.Heartbeat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SSAProtocol.Heartbeat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SSAProtocol.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.Heartbeat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SSAProtocol.Heartbeat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.Heartbeat}
     *
     * <pre>
     *心跳请求协议设计
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SSAProtocol.HeartbeatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SSAProtocol.internal_static_protocol_Heartbeat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SSAProtocol.internal_static_protocol_Heartbeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SSAProtocol.Heartbeat.class, SSAProtocol.Heartbeat.Builder.class);
      }

      // Construct using SSAProtocol.Heartbeat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        bitField0_ = (bitField0_ & ~0x00000001);
        heartbeat_ = 1;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SSAProtocol.internal_static_protocol_Heartbeat_descriptor;
      }

      public SSAProtocol.Heartbeat getDefaultInstanceForType() {
        return SSAProtocol.Heartbeat.getDefaultInstance();
      }

      public SSAProtocol.Heartbeat build() {
        SSAProtocol.Heartbeat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SSAProtocol.Heartbeat buildPartial() {
        SSAProtocol.Heartbeat result = new SSAProtocol.Heartbeat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocolType_ = protocolType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heartbeat_ = heartbeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SSAProtocol.Heartbeat) {
          return mergeFrom((SSAProtocol.Heartbeat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SSAProtocol.Heartbeat other) {
        if (other == SSAProtocol.Heartbeat.getDefaultInstance()) return this;
        if (other.hasProtocolType()) {
          setProtocolType(other.getProtocolType());
        }
        if (other.hasHeartbeat()) {
          setHeartbeat(other.getHeartbeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProtocolType()) {
          
          return false;
        }
        if (!hasHeartbeat()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SSAProtocol.Heartbeat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SSAProtocol.Heartbeat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .protocol.ProtocolType protocolType = 1;
      private SSAProtocol.ProtocolType protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public boolean hasProtocolType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public SSAProtocol.ProtocolType getProtocolType() {
        return protocolType_;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder setProtocolType(SSAProtocol.ProtocolType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        protocolType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder clearProtocolType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        onChanged();
        return this;
      }

      // required int32 heartbeat = 2 [default = 1];
      private int heartbeat_ = 1;
      /**
       * <code>required int32 heartbeat = 2 [default = 1];</code>
       */
      public boolean hasHeartbeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 heartbeat = 2 [default = 1];</code>
       */
      public int getHeartbeat() {
        return heartbeat_;
      }
      /**
       * <code>required int32 heartbeat = 2 [default = 1];</code>
       */
      public Builder setHeartbeat(int value) {
        bitField0_ |= 0x00000002;
        heartbeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 heartbeat = 2 [default = 1];</code>
       */
      public Builder clearHeartbeat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heartbeat_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.Heartbeat)
    }

    static {
      defaultInstance = new Heartbeat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.Heartbeat)
  }

  public interface ServerStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .protocol.ProtocolType protocolType = 1;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    boolean hasProtocolType();
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    SSAProtocol.ProtocolType getProtocolType();

    // required int32 serverNo = 2;
    /**
     * <code>required int32 serverNo = 2;</code>
     */
    boolean hasServerNo();
    /**
     * <code>required int32 serverNo = 2;</code>
     */
    int getServerNo();

    // required .protocol.ServerStatus.ServerType serverType = 3;
    /**
     * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
     */
    boolean hasServerType();
    /**
     * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
     */
    SSAProtocol.ServerStatus.ServerType getServerType();

    // required int32 aliveConnection = 4;
    /**
     * <code>required int32 aliveConnection = 4;</code>
     */
    boolean hasAliveConnection();
    /**
     * <code>required int32 aliveConnection = 4;</code>
     */
    int getAliveConnection();

    // required int32 cpuLoad = 5;
    /**
     * <code>required int32 cpuLoad = 5;</code>
     */
    boolean hasCpuLoad();
    /**
     * <code>required int32 cpuLoad = 5;</code>
     */
    int getCpuLoad();

    // required int32 memLoad = 6;
    /**
     * <code>required int32 memLoad = 6;</code>
     */
    boolean hasMemLoad();
    /**
     * <code>required int32 memLoad = 6;</code>
     */
    int getMemLoad();

    // required int32 status = 7;
    /**
     * <code>required int32 status = 7;</code>
     */
    boolean hasStatus();
    /**
     * <code>required int32 status = 7;</code>
     */
    int getStatus();

    // required fixed64 serverIp = 8;
    /**
     * <code>required fixed64 serverIp = 8;</code>
     *
     * <pre>
     *新增加协议字段
     * </pre>
     */
    boolean hasServerIp();
    /**
     * <code>required fixed64 serverIp = 8;</code>
     *
     * <pre>
     *新增加协议字段
     * </pre>
     */
    long getServerIp();

    // required int32 serverPort = 9;
    /**
     * <code>required int32 serverPort = 9;</code>
     */
    boolean hasServerPort();
    /**
     * <code>required int32 serverPort = 9;</code>
     */
    int getServerPort();

    // optional int32 monitorPort = 10;
    /**
     * <code>optional int32 monitorPort = 10;</code>
     */
    boolean hasMonitorPort();
    /**
     * <code>optional int32 monitorPort = 10;</code>
     */
    int getMonitorPort();

    // required int32 maxConnection = 11;
    /**
     * <code>required int32 maxConnection = 11;</code>
     */
    boolean hasMaxConnection();
    /**
     * <code>required int32 maxConnection = 11;</code>
     */
    int getMaxConnection();

    // required int32 belongCountry = 12;
    /**
     * <code>required int32 belongCountry = 12;</code>
     *
     * <pre>
     *0(中国)
     * </pre>
     */
    boolean hasBelongCountry();
    /**
     * <code>required int32 belongCountry = 12;</code>
     *
     * <pre>
     *0(中国)
     * </pre>
     */
    int getBelongCountry();

    // required int32 belongProvince = 13;
    /**
     * <code>required int32 belongProvince = 13;</code>
     *
     * <pre>
     *210000(辽宁省)
     * </pre>
     */
    boolean hasBelongProvince();
    /**
     * <code>required int32 belongProvince = 13;</code>
     *
     * <pre>
     *210000(辽宁省)
     * </pre>
     */
    int getBelongProvince();

    // required int32 belongCity = 14;
    /**
     * <code>required int32 belongCity = 14;</code>
     *
     * <pre>
     *210100(沈阳市)
     * </pre>
     */
    boolean hasBelongCity();
    /**
     * <code>required int32 belongCity = 14;</code>
     *
     * <pre>
     *210100(沈阳市)
     * </pre>
     */
    int getBelongCity();

    // repeated int32 belongIsp = 15;
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    java.util.List<java.lang.Integer> getBelongIspList();
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    int getBelongIspCount();
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    int getBelongIsp(int index);
  }
  /**
   * Protobuf type {@code protocol.ServerStatus}
   *
   * <pre>
   *服务状态更新请求协议
   * </pre>
   */
  public static final class ServerStatus extends
      com.google.protobuf.GeneratedMessage
      implements ServerStatusOrBuilder {
    // Use ServerStatus.newBuilder() to construct.
    private ServerStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ServerStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ServerStatus defaultInstance;
    public static ServerStatus getDefaultInstance() {
      return defaultInstance;
    }

    public ServerStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ServerStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              SSAProtocol.ProtocolType value = SSAProtocol.ProtocolType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                protocolType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverNo_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              SSAProtocol.ServerStatus.ServerType value = SSAProtocol.ServerStatus.ServerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                serverType_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              aliveConnection_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              cpuLoad_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              memLoad_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              serverIp_ = input.readFixed64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              serverPort_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              monitorPort_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              maxConnection_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              belongCountry_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              belongProvince_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              belongCity_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                belongIsp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              belongIsp_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                belongIsp_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                belongIsp_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          belongIsp_ = java.util.Collections.unmodifiableList(belongIsp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SSAProtocol.internal_static_protocol_ServerStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SSAProtocol.internal_static_protocol_ServerStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SSAProtocol.ServerStatus.class, SSAProtocol.ServerStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<ServerStatus> PARSER =
        new com.google.protobuf.AbstractParser<ServerStatus>() {
      public ServerStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ServerStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ServerStatus> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code protocol.ServerStatus.ServerType}
     */
    public enum ServerType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>QUOTATION = 1;</code>
       */
      QUOTATION(0, 1),
      /**
       * <code>ASK = 2;</code>
       */
      ASK(1, 2),
      /**
       * <code>F10 = 3;</code>
       */
      F10(2, 3),
      ;

      /**
       * <code>QUOTATION = 1;</code>
       */
      public static final int QUOTATION_VALUE = 1;
      /**
       * <code>ASK = 2;</code>
       */
      public static final int ASK_VALUE = 2;
      /**
       * <code>F10 = 3;</code>
       */
      public static final int F10_VALUE = 3;


      public final int getNumber() { return value; }

      public static ServerType valueOf(int value) {
        switch (value) {
          case 1: return QUOTATION;
          case 2: return ASK;
          case 3: return F10;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ServerType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ServerType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ServerType>() {
              public ServerType findValueByNumber(int number) {
                return ServerType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return SSAProtocol.ServerStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final ServerType[] VALUES = values();

      public static ServerType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ServerType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:protocol.ServerStatus.ServerType)
    }

    private int bitField0_;
    // required .protocol.ProtocolType protocolType = 1;
    public static final int PROTOCOLTYPE_FIELD_NUMBER = 1;
    private SSAProtocol.ProtocolType protocolType_;
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public boolean hasProtocolType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .protocol.ProtocolType protocolType = 1;</code>
     */
    public SSAProtocol.ProtocolType getProtocolType() {
      return protocolType_;
    }

    // required int32 serverNo = 2;
    public static final int SERVERNO_FIELD_NUMBER = 2;
    private int serverNo_;
    /**
     * <code>required int32 serverNo = 2;</code>
     */
    public boolean hasServerNo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 serverNo = 2;</code>
     */
    public int getServerNo() {
      return serverNo_;
    }

    // required .protocol.ServerStatus.ServerType serverType = 3;
    public static final int SERVERTYPE_FIELD_NUMBER = 3;
    private SSAProtocol.ServerStatus.ServerType serverType_;
    /**
     * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
     */
    public boolean hasServerType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
     */
    public SSAProtocol.ServerStatus.ServerType getServerType() {
      return serverType_;
    }

    // required int32 aliveConnection = 4;
    public static final int ALIVECONNECTION_FIELD_NUMBER = 4;
    private int aliveConnection_;
    /**
     * <code>required int32 aliveConnection = 4;</code>
     */
    public boolean hasAliveConnection() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 aliveConnection = 4;</code>
     */
    public int getAliveConnection() {
      return aliveConnection_;
    }

    // required int32 cpuLoad = 5;
    public static final int CPULOAD_FIELD_NUMBER = 5;
    private int cpuLoad_;
    /**
     * <code>required int32 cpuLoad = 5;</code>
     */
    public boolean hasCpuLoad() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 cpuLoad = 5;</code>
     */
    public int getCpuLoad() {
      return cpuLoad_;
    }

    // required int32 memLoad = 6;
    public static final int MEMLOAD_FIELD_NUMBER = 6;
    private int memLoad_;
    /**
     * <code>required int32 memLoad = 6;</code>
     */
    public boolean hasMemLoad() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 memLoad = 6;</code>
     */
    public int getMemLoad() {
      return memLoad_;
    }

    // required int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private int status_;
    /**
     * <code>required int32 status = 7;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 status = 7;</code>
     */
    public int getStatus() {
      return status_;
    }

    // required fixed64 serverIp = 8;
    public static final int SERVERIP_FIELD_NUMBER = 8;
    private long serverIp_;
    /**
     * <code>required fixed64 serverIp = 8;</code>
     *
     * <pre>
     *新增加协议字段
     * </pre>
     */
    public boolean hasServerIp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required fixed64 serverIp = 8;</code>
     *
     * <pre>
     *新增加协议字段
     * </pre>
     */
    public long getServerIp() {
      return serverIp_;
    }

    // required int32 serverPort = 9;
    public static final int SERVERPORT_FIELD_NUMBER = 9;
    private int serverPort_;
    /**
     * <code>required int32 serverPort = 9;</code>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 serverPort = 9;</code>
     */
    public int getServerPort() {
      return serverPort_;
    }

    // optional int32 monitorPort = 10;
    public static final int MONITORPORT_FIELD_NUMBER = 10;
    private int monitorPort_;
    /**
     * <code>optional int32 monitorPort = 10;</code>
     */
    public boolean hasMonitorPort() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 monitorPort = 10;</code>
     */
    public int getMonitorPort() {
      return monitorPort_;
    }

    // required int32 maxConnection = 11;
    public static final int MAXCONNECTION_FIELD_NUMBER = 11;
    private int maxConnection_;
    /**
     * <code>required int32 maxConnection = 11;</code>
     */
    public boolean hasMaxConnection() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 maxConnection = 11;</code>
     */
    public int getMaxConnection() {
      return maxConnection_;
    }

    // required int32 belongCountry = 12;
    public static final int BELONGCOUNTRY_FIELD_NUMBER = 12;
    private int belongCountry_;
    /**
     * <code>required int32 belongCountry = 12;</code>
     *
     * <pre>
     *0(中国)
     * </pre>
     */
    public boolean hasBelongCountry() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 belongCountry = 12;</code>
     *
     * <pre>
     *0(中国)
     * </pre>
     */
    public int getBelongCountry() {
      return belongCountry_;
    }

    // required int32 belongProvince = 13;
    public static final int BELONGPROVINCE_FIELD_NUMBER = 13;
    private int belongProvince_;
    /**
     * <code>required int32 belongProvince = 13;</code>
     *
     * <pre>
     *210000(辽宁省)
     * </pre>
     */
    public boolean hasBelongProvince() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 belongProvince = 13;</code>
     *
     * <pre>
     *210000(辽宁省)
     * </pre>
     */
    public int getBelongProvince() {
      return belongProvince_;
    }

    // required int32 belongCity = 14;
    public static final int BELONGCITY_FIELD_NUMBER = 14;
    private int belongCity_;
    /**
     * <code>required int32 belongCity = 14;</code>
     *
     * <pre>
     *210100(沈阳市)
     * </pre>
     */
    public boolean hasBelongCity() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 belongCity = 14;</code>
     *
     * <pre>
     *210100(沈阳市)
     * </pre>
     */
    public int getBelongCity() {
      return belongCity_;
    }

    // repeated int32 belongIsp = 15;
    public static final int BELONGISP_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> belongIsp_;
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getBelongIspList() {
      return belongIsp_;
    }
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    public int getBelongIspCount() {
      return belongIsp_.size();
    }
    /**
     * <code>repeated int32 belongIsp = 15;</code>
     */
    public int getBelongIsp(int index) {
      return belongIsp_.get(index);
    }

    private void initFields() {
      protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
      serverNo_ = 0;
      serverType_ = SSAProtocol.ServerStatus.ServerType.QUOTATION;
      aliveConnection_ = 0;
      cpuLoad_ = 0;
      memLoad_ = 0;
      status_ = 0;
      serverIp_ = 0L;
      serverPort_ = 0;
      monitorPort_ = 0;
      maxConnection_ = 0;
      belongCountry_ = 0;
      belongProvince_ = 0;
      belongCity_ = 0;
      belongIsp_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasProtocolType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerNo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAliveConnection()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCpuLoad()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemLoad()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerIp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxConnection()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBelongCountry()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBelongProvince()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBelongCity()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, protocolType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, serverType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, aliveConnection_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, cpuLoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, memLoad_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFixed64(8, serverIp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, serverPort_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, monitorPort_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, maxConnection_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, belongCountry_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, belongProvince_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, belongCity_);
      }
      for (int i = 0; i < belongIsp_.size(); i++) {
        output.writeInt32(15, belongIsp_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, protocolType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverNo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, serverType_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, aliveConnection_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cpuLoad_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, memLoad_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, status_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(8, serverIp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, serverPort_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, monitorPort_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxConnection_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, belongCountry_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, belongProvince_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, belongCity_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < belongIsp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(belongIsp_.get(i));
        }
        size += dataSize;
        size += 1 * getBelongIspList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static SSAProtocol.ServerStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.ServerStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.ServerStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SSAProtocol.ServerStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SSAProtocol.ServerStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.ServerStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static SSAProtocol.ServerStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static SSAProtocol.ServerStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static SSAProtocol.ServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static SSAProtocol.ServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SSAProtocol.ServerStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code protocol.ServerStatus}
     *
     * <pre>
     *服务状态更新请求协议
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements SSAProtocol.ServerStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SSAProtocol.internal_static_protocol_ServerStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SSAProtocol.internal_static_protocol_ServerStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SSAProtocol.ServerStatus.class, SSAProtocol.ServerStatus.Builder.class);
      }

      // Construct using SSAProtocol.ServerStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        serverType_ = SSAProtocol.ServerStatus.ServerType.QUOTATION;
        bitField0_ = (bitField0_ & ~0x00000004);
        aliveConnection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuLoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        memLoad_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        serverIp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        monitorPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        maxConnection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        belongCountry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        belongProvince_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        belongCity_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        belongIsp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SSAProtocol.internal_static_protocol_ServerStatus_descriptor;
      }

      public SSAProtocol.ServerStatus getDefaultInstanceForType() {
        return SSAProtocol.ServerStatus.getDefaultInstance();
      }

      public SSAProtocol.ServerStatus build() {
        SSAProtocol.ServerStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public SSAProtocol.ServerStatus buildPartial() {
        SSAProtocol.ServerStatus result = new SSAProtocol.ServerStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocolType_ = protocolType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverNo_ = serverNo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverType_ = serverType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.aliveConnection_ = aliveConnection_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cpuLoad_ = cpuLoad_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.memLoad_ = memLoad_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.serverIp_ = serverIp_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.monitorPort_ = monitorPort_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.maxConnection_ = maxConnection_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.belongCountry_ = belongCountry_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.belongProvince_ = belongProvince_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.belongCity_ = belongCity_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          belongIsp_ = java.util.Collections.unmodifiableList(belongIsp_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.belongIsp_ = belongIsp_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SSAProtocol.ServerStatus) {
          return mergeFrom((SSAProtocol.ServerStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SSAProtocol.ServerStatus other) {
        if (other == SSAProtocol.ServerStatus.getDefaultInstance()) return this;
        if (other.hasProtocolType()) {
          setProtocolType(other.getProtocolType());
        }
        if (other.hasServerNo()) {
          setServerNo(other.getServerNo());
        }
        if (other.hasServerType()) {
          setServerType(other.getServerType());
        }
        if (other.hasAliveConnection()) {
          setAliveConnection(other.getAliveConnection());
        }
        if (other.hasCpuLoad()) {
          setCpuLoad(other.getCpuLoad());
        }
        if (other.hasMemLoad()) {
          setMemLoad(other.getMemLoad());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasServerIp()) {
          setServerIp(other.getServerIp());
        }
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasMonitorPort()) {
          setMonitorPort(other.getMonitorPort());
        }
        if (other.hasMaxConnection()) {
          setMaxConnection(other.getMaxConnection());
        }
        if (other.hasBelongCountry()) {
          setBelongCountry(other.getBelongCountry());
        }
        if (other.hasBelongProvince()) {
          setBelongProvince(other.getBelongProvince());
        }
        if (other.hasBelongCity()) {
          setBelongCity(other.getBelongCity());
        }
        if (!other.belongIsp_.isEmpty()) {
          if (belongIsp_.isEmpty()) {
            belongIsp_ = other.belongIsp_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureBelongIspIsMutable();
            belongIsp_.addAll(other.belongIsp_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProtocolType()) {
          
          return false;
        }
        if (!hasServerNo()) {
          
          return false;
        }
        if (!hasServerType()) {
          
          return false;
        }
        if (!hasAliveConnection()) {
          
          return false;
        }
        if (!hasCpuLoad()) {
          
          return false;
        }
        if (!hasMemLoad()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        if (!hasServerIp()) {
          
          return false;
        }
        if (!hasServerPort()) {
          
          return false;
        }
        if (!hasMaxConnection()) {
          
          return false;
        }
        if (!hasBelongCountry()) {
          
          return false;
        }
        if (!hasBelongProvince()) {
          
          return false;
        }
        if (!hasBelongCity()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SSAProtocol.ServerStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SSAProtocol.ServerStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .protocol.ProtocolType protocolType = 1;
      private SSAProtocol.ProtocolType protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public boolean hasProtocolType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public SSAProtocol.ProtocolType getProtocolType() {
        return protocolType_;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder setProtocolType(SSAProtocol.ProtocolType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        protocolType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protocol.ProtocolType protocolType = 1;</code>
       */
      public Builder clearProtocolType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocolType_ = SSAProtocol.ProtocolType.TOKEN_REQUEST_PROTOCOL;
        onChanged();
        return this;
      }

      // required int32 serverNo = 2;
      private int serverNo_ ;
      /**
       * <code>required int32 serverNo = 2;</code>
       */
      public boolean hasServerNo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 serverNo = 2;</code>
       */
      public int getServerNo() {
        return serverNo_;
      }
      /**
       * <code>required int32 serverNo = 2;</code>
       */
      public Builder setServerNo(int value) {
        bitField0_ |= 0x00000002;
        serverNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverNo = 2;</code>
       */
      public Builder clearServerNo() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverNo_ = 0;
        onChanged();
        return this;
      }

      // required .protocol.ServerStatus.ServerType serverType = 3;
      private SSAProtocol.ServerStatus.ServerType serverType_ = SSAProtocol.ServerStatus.ServerType.QUOTATION;
      /**
       * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
       */
      public boolean hasServerType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
       */
      public SSAProtocol.ServerStatus.ServerType getServerType() {
        return serverType_;
      }
      /**
       * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
       */
      public Builder setServerType(SSAProtocol.ServerStatus.ServerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        serverType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .protocol.ServerStatus.ServerType serverType = 3;</code>
       */
      public Builder clearServerType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverType_ = SSAProtocol.ServerStatus.ServerType.QUOTATION;
        onChanged();
        return this;
      }

      // required int32 aliveConnection = 4;
      private int aliveConnection_ ;
      /**
       * <code>required int32 aliveConnection = 4;</code>
       */
      public boolean hasAliveConnection() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 aliveConnection = 4;</code>
       */
      public int getAliveConnection() {
        return aliveConnection_;
      }
      /**
       * <code>required int32 aliveConnection = 4;</code>
       */
      public Builder setAliveConnection(int value) {
        bitField0_ |= 0x00000008;
        aliveConnection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 aliveConnection = 4;</code>
       */
      public Builder clearAliveConnection() {
        bitField0_ = (bitField0_ & ~0x00000008);
        aliveConnection_ = 0;
        onChanged();
        return this;
      }

      // required int32 cpuLoad = 5;
      private int cpuLoad_ ;
      /**
       * <code>required int32 cpuLoad = 5;</code>
       */
      public boolean hasCpuLoad() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 cpuLoad = 5;</code>
       */
      public int getCpuLoad() {
        return cpuLoad_;
      }
      /**
       * <code>required int32 cpuLoad = 5;</code>
       */
      public Builder setCpuLoad(int value) {
        bitField0_ |= 0x00000010;
        cpuLoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cpuLoad = 5;</code>
       */
      public Builder clearCpuLoad() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cpuLoad_ = 0;
        onChanged();
        return this;
      }

      // required int32 memLoad = 6;
      private int memLoad_ ;
      /**
       * <code>required int32 memLoad = 6;</code>
       */
      public boolean hasMemLoad() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 memLoad = 6;</code>
       */
      public int getMemLoad() {
        return memLoad_;
      }
      /**
       * <code>required int32 memLoad = 6;</code>
       */
      public Builder setMemLoad(int value) {
        bitField0_ |= 0x00000020;
        memLoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 memLoad = 6;</code>
       */
      public Builder clearMemLoad() {
        bitField0_ = (bitField0_ & ~0x00000020);
        memLoad_ = 0;
        onChanged();
        return this;
      }

      // required int32 status = 7;
      private int status_ ;
      /**
       * <code>required int32 status = 7;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000040;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 status = 7;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000040);
        status_ = 0;
        onChanged();
        return this;
      }

      // required fixed64 serverIp = 8;
      private long serverIp_ ;
      /**
       * <code>required fixed64 serverIp = 8;</code>
       *
       * <pre>
       *新增加协议字段
       * </pre>
       */
      public boolean hasServerIp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required fixed64 serverIp = 8;</code>
       *
       * <pre>
       *新增加协议字段
       * </pre>
       */
      public long getServerIp() {
        return serverIp_;
      }
      /**
       * <code>required fixed64 serverIp = 8;</code>
       *
       * <pre>
       *新增加协议字段
       * </pre>
       */
      public Builder setServerIp(long value) {
        bitField0_ |= 0x00000080;
        serverIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required fixed64 serverIp = 8;</code>
       *
       * <pre>
       *新增加协议字段
       * </pre>
       */
      public Builder clearServerIp() {
        bitField0_ = (bitField0_ & ~0x00000080);
        serverIp_ = 0L;
        onChanged();
        return this;
      }

      // required int32 serverPort = 9;
      private int serverPort_ ;
      /**
       * <code>required int32 serverPort = 9;</code>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 serverPort = 9;</code>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>required int32 serverPort = 9;</code>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000100;
        serverPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 serverPort = 9;</code>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000100);
        serverPort_ = 0;
        onChanged();
        return this;
      }

      // optional int32 monitorPort = 10;
      private int monitorPort_ ;
      /**
       * <code>optional int32 monitorPort = 10;</code>
       */
      public boolean hasMonitorPort() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 monitorPort = 10;</code>
       */
      public int getMonitorPort() {
        return monitorPort_;
      }
      /**
       * <code>optional int32 monitorPort = 10;</code>
       */
      public Builder setMonitorPort(int value) {
        bitField0_ |= 0x00000200;
        monitorPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 monitorPort = 10;</code>
       */
      public Builder clearMonitorPort() {
        bitField0_ = (bitField0_ & ~0x00000200);
        monitorPort_ = 0;
        onChanged();
        return this;
      }

      // required int32 maxConnection = 11;
      private int maxConnection_ ;
      /**
       * <code>required int32 maxConnection = 11;</code>
       */
      public boolean hasMaxConnection() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 maxConnection = 11;</code>
       */
      public int getMaxConnection() {
        return maxConnection_;
      }
      /**
       * <code>required int32 maxConnection = 11;</code>
       */
      public Builder setMaxConnection(int value) {
        bitField0_ |= 0x00000400;
        maxConnection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxConnection = 11;</code>
       */
      public Builder clearMaxConnection() {
        bitField0_ = (bitField0_ & ~0x00000400);
        maxConnection_ = 0;
        onChanged();
        return this;
      }

      // required int32 belongCountry = 12;
      private int belongCountry_ ;
      /**
       * <code>required int32 belongCountry = 12;</code>
       *
       * <pre>
       *0(中国)
       * </pre>
       */
      public boolean hasBelongCountry() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 belongCountry = 12;</code>
       *
       * <pre>
       *0(中国)
       * </pre>
       */
      public int getBelongCountry() {
        return belongCountry_;
      }
      /**
       * <code>required int32 belongCountry = 12;</code>
       *
       * <pre>
       *0(中国)
       * </pre>
       */
      public Builder setBelongCountry(int value) {
        bitField0_ |= 0x00000800;
        belongCountry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 belongCountry = 12;</code>
       *
       * <pre>
       *0(中国)
       * </pre>
       */
      public Builder clearBelongCountry() {
        bitField0_ = (bitField0_ & ~0x00000800);
        belongCountry_ = 0;
        onChanged();
        return this;
      }

      // required int32 belongProvince = 13;
      private int belongProvince_ ;
      /**
       * <code>required int32 belongProvince = 13;</code>
       *
       * <pre>
       *210000(辽宁省)
       * </pre>
       */
      public boolean hasBelongProvince() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 belongProvince = 13;</code>
       *
       * <pre>
       *210000(辽宁省)
       * </pre>
       */
      public int getBelongProvince() {
        return belongProvince_;
      }
      /**
       * <code>required int32 belongProvince = 13;</code>
       *
       * <pre>
       *210000(辽宁省)
       * </pre>
       */
      public Builder setBelongProvince(int value) {
        bitField0_ |= 0x00001000;
        belongProvince_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 belongProvince = 13;</code>
       *
       * <pre>
       *210000(辽宁省)
       * </pre>
       */
      public Builder clearBelongProvince() {
        bitField0_ = (bitField0_ & ~0x00001000);
        belongProvince_ = 0;
        onChanged();
        return this;
      }

      // required int32 belongCity = 14;
      private int belongCity_ ;
      /**
       * <code>required int32 belongCity = 14;</code>
       *
       * <pre>
       *210100(沈阳市)
       * </pre>
       */
      public boolean hasBelongCity() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 belongCity = 14;</code>
       *
       * <pre>
       *210100(沈阳市)
       * </pre>
       */
      public int getBelongCity() {
        return belongCity_;
      }
      /**
       * <code>required int32 belongCity = 14;</code>
       *
       * <pre>
       *210100(沈阳市)
       * </pre>
       */
      public Builder setBelongCity(int value) {
        bitField0_ |= 0x00002000;
        belongCity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 belongCity = 14;</code>
       *
       * <pre>
       *210100(沈阳市)
       * </pre>
       */
      public Builder clearBelongCity() {
        bitField0_ = (bitField0_ & ~0x00002000);
        belongCity_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 belongIsp = 15;
      private java.util.List<java.lang.Integer> belongIsp_ = java.util.Collections.emptyList();
      private void ensureBelongIspIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          belongIsp_ = new java.util.ArrayList<java.lang.Integer>(belongIsp_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public java.util.List<java.lang.Integer>
          getBelongIspList() {
        return java.util.Collections.unmodifiableList(belongIsp_);
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public int getBelongIspCount() {
        return belongIsp_.size();
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public int getBelongIsp(int index) {
        return belongIsp_.get(index);
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public Builder setBelongIsp(
          int index, int value) {
        ensureBelongIspIsMutable();
        belongIsp_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public Builder addBelongIsp(int value) {
        ensureBelongIspIsMutable();
        belongIsp_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public Builder addAllBelongIsp(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBelongIspIsMutable();
        super.addAll(values, belongIsp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongIsp = 15;</code>
       */
      public Builder clearBelongIsp() {
        belongIsp_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:protocol.ServerStatus)
    }

    static {
      defaultInstance = new ServerStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:protocol.ServerStatus)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Protocol_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_Protocol_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_UserSetting_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_UserSetting_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_Heartbeat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_Heartbeat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_protocol_ServerStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_protocol_ServerStatus_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022SSA-Protocol.proto\022\010protocol\"8\n\010Protoc" +
      "ol\022,\n\014protocolType\030\001 \002(\0162\026.protocol.Prot" +
      "ocolType\"\037\n\013UserSetting\022\020\n\010userName\030\001 \001(" +
      "\t\"O\n\tHeartbeat\022,\n\014protocolType\030\001 \002(\0162\026.p" +
      "rotocol.ProtocolType\022\024\n\theartbeat\030\002 \002(\005:" +
      "\0011\"\247\003\n\014ServerStatus\022,\n\014protocolType\030\001 \002(" +
      "\0162\026.protocol.ProtocolType\022\020\n\010serverNo\030\002 " +
      "\002(\005\0225\n\nserverType\030\003 \002(\0162!.protocol.Serve" +
      "rStatus.ServerType\022\027\n\017aliveConnection\030\004 " +
      "\002(\005\022\017\n\007cpuLoad\030\005 \002(\005\022\017\n\007memLoad\030\006 \002(\005\022\016\n",
      "\006status\030\007 \002(\005\022\020\n\010serverIp\030\010 \002(\006\022\022\n\nserve" +
      "rPort\030\t \002(\005\022\023\n\013monitorPort\030\n \001(\005\022\025\n\rmaxC" +
      "onnection\030\013 \002(\005\022\025\n\rbelongCountry\030\014 \002(\005\022\026" +
      "\n\016belongProvince\030\r \002(\005\022\022\n\nbelongCity\030\016 \002" +
      "(\005\022\021\n\tbelongIsp\030\017 \003(\005\"-\n\nServerType\022\r\n\tQ" +
      "UOTATION\020\001\022\007\n\003ASK\020\002\022\007\n\003F10\020\003*|\n\014Protocol" +
      "Type\022\032\n\026TOKEN_REQUEST_PROTOCOL\020\001\022\033\n\027TOKE" +
      "N_RESPONSE_PROTOCOL\020\002\022\027\n\023HEART_BEAT_PROT" +
      "OCOL\020\003\022\032\n\026SERVER_STATUS_PROTOCOL\020\004*N\n\013Re" +
      "questType\022\r\n\tGET_TOKEN\020\000\022\035\n\031EXTEND_TOKEN",
      "_TIME_TO_LIVE\020\001\022\021\n\rINVALID_TOKEN\020\003B>\n/co" +
      "m.linlong.ssa.business.communication.pro" +
      "tocolB\013SSAProtocol"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_protocol_Protocol_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_protocol_Protocol_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protocol_Protocol_descriptor,
              new java.lang.String[] { "ProtocolType", });
          internal_static_protocol_UserSetting_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_protocol_UserSetting_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protocol_UserSetting_descriptor,
              new java.lang.String[] { "UserName", });
          internal_static_protocol_Heartbeat_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_protocol_Heartbeat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protocol_Heartbeat_descriptor,
              new java.lang.String[] { "ProtocolType", "Heartbeat", });
          internal_static_protocol_ServerStatus_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_protocol_ServerStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_protocol_ServerStatus_descriptor,
              new java.lang.String[] { "ProtocolType", "ServerNo", "ServerType", "AliveConnection", "CpuLoad", "MemLoad", "Status", "ServerIp", "ServerPort", "MonitorPort", "MaxConnection", "BelongCountry", "BelongProvince", "BelongCity", "BelongIsp", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
