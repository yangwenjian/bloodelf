<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- boneCp 数据源配置 -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${boneCp.driverClass}" />
		<property name="jdbcUrl" value="${boneCp.jdbcUrl}" />
		<property name="username" value="${boneCp.username}" />
		<property name="password" value="${boneCp.password}" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="${boneCp.maxConnectionsPerPartition}" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="${boneCp.minConnectionsPerPartition}" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="${boneCp.partitionCount}" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="${boneCp.acquireIncrement}" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="${boneCp.statementsCacheSize}" />
	</bean>

	<!-- myBatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:/com/linlong/f10/*/geniusdao/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.linlong.f10.*.geniusdao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<bean id="dataSource2" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${boneCp.driverClass}" />
		<property name="jdbcUrl" value="${boneCp.jdbcUrl.etl}" />
		<property name="username" value="${boneCp.username.etl}" />
		<property name="password" value="${boneCp.password.etl}" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="${boneCp.maxConnectionsPerPartition}" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="${boneCp.minConnectionsPerPartition}" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="${boneCp.partitionCount}" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="${boneCp.acquireIncrement}" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="${boneCp.statementsCacheSize}" />
	</bean>

	<!-- myBatis -->
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<!-- 自动扫描目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:/com/linlong/f10/*/f10dao/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.linlong.f10.*.f10dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>
	
	<bean id="dataSource3" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${boneCp.driverClass}" />
		<property name="jdbcUrl" value="${boneCp.jdbcUrl.f10}" />
		<property name="username" value="${boneCp.username}" />
		<property name="password" value="${boneCp.password}" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="${boneCp.maxConnectionsPerPartition}" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="${boneCp.minConnectionsPerPartition}" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="${boneCp.partitionCount}" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="${boneCp.acquireIncrement}" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="${boneCp.statementsCacheSize}" />
	</bean>

	<!-- myBatis -->
	<bean id="sqlSessionFactory3" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource3" />
		<!-- 自动扫描目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:/com/linlong/f10/*/geniusf10dao/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="mapperScannerConfigurer3" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.linlong.f10.*.geniusf10dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory3" />
	</bean>

	<!-- 配置事务管理器 -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->
	<!-- 拦截器方式配置事务 -->
	<!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="add*" propagation="REQUIRED" /> <tx:method 
		name="append*" propagation="REQUIRED" /> <tx:method name="insert*" propagation="REQUIRED" 
		/> <tx:method name="save*" propagation="REQUIRED" /> <tx:method name="update*" 
		propagation="REQUIRED" /> <tx:method name="modify*" propagation="REQUIRED" 
		/> <tx:method name="edit*" propagation="REQUIRED" /> <tx:method name="delete*" 
		propagation="REQUIRED" /> <tx:method name="remove*" propagation="REQUIRED" 
		/> <tx:method name="get*" propagation="SUPPORTS"/> <tx:method name="find*" 
		propagation="SUPPORTS" /> <tx:method name="load*" propagation="SUPPORTS" 
		/> <tx:method name="search*" propagation="SUPPORTS" /> <tx:method name="*" 
		propagation="SUPPORTS" rollback-for="Exception"/> </tx:attributes> </tx:advice> -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="false"/> <aop:config> <aop:pointcut 
		id="transactionPointcut" expression="execution(* com.linlong.f10.manager.*.managerservice.*Service.*(..))" 
		/> <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" 
		/> </aop:config> -->
</beans>